generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  street     String   @db.VarChar(255)
  city       String   @db.VarChar(100)
  state      String?  @db.VarChar(100)
  zip_code   String?  @db.VarChar(20)
  country    String?  @default("Vietnam") @db.VarChar(50)
  is_default Boolean? @default(false)
  User       User?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(100)
  FoodItem FoodItem[]
}

model FoodItem {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(100)
  description String?
  price       Decimal     @db.Decimal(10, 2)
  img_url     String?     @db.VarChar(255)
  category_id Int?
  stock       Int?        @default(0)
  Category    Category?   @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  OrderItem   OrderItem[]
}

model Order {
  id           Int         @id @default(autoincrement())
  user_id      Int?
  total_amount Decimal     @db.Decimal(10, 2)
  status       String?     @default("Pending") @db.VarChar(50)
  created_at   DateTime?   @default(now()) @db.Timestamp(6)
  updated_at   DateTime?   @default(now()) @db.Timestamp(6)
  User         User?       @relation(fields: [user_id], references: [id], onUpdate: NoAction)
  OrderItem    OrderItem[]
  Payment      Payment?
  Shipping     Shipping?
}

model OrderItem {
  id           Int       @id @default(autoincrement())
  order_id     Int?
  food_item_id Int?
  quantity     Int
  price        Decimal   @db.Decimal(10, 2)
  FoodItem     FoodItem? @relation(fields: [food_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Order        Order?    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Payment {
  id           Int       @id @default(autoincrement())
  order_id     Int?      @unique
  amount       Decimal   @db.Decimal(10, 2)
  method       String    @db.VarChar(50)
  payment_date DateTime? @default(now()) @db.Timestamp(6)
  Order        Order?    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  name       String    @db.VarChar(100)
  phone      String?   @db.VarChar(15)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  Address    Address[]
  Order      Order[]
}

model Shipping {
  id                 Int       @id @default(autoincrement())
  order_id           Int?      @unique
  address            String    @db.VarChar(255)
  phone              String    @db.VarChar(15)
  estimated_delivery DateTime? @db.Timestamp(6)
  actual_delivery    DateTime? @db.Timestamp(6)
  Order              Order?    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
